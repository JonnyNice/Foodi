{"ast":null,"code":"var _jsxFileName = \"/home/bombbilly/Development/code/phase-3/project3/recipeapp/frontend/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  // Declare a state variable called \"emailOrUsername\" and a function to update it\n  const [emailOrUsername, setEmailOrUsername] = useState('');\n  // Declare a state variable called \"password\" and a function to update it\n  const [password, setPassword] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Make a POST request to the '/login' endpoint with the email/username and password\n    fetch('localhost:9292/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        emailOrUsername,\n        password\n      })\n    }).then(response => {\n      // If the response is successful, save the user's information in the session and redirect to the dashboard\n      if (response.ok) {\n        response.json().then(user => {\n          sessionStorage.setItem('user', JSON.stringify(user));\n          window.location.replace('/dashboard');\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"emailOrUsername\",\n      children: [\"Email or username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"emailOrUsername\",\n        value: emailOrUsername,\n        onChange: event => setEmailOrUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n// import React from 'react'\n\n// function LoginForm() {\n//   return (\n//     <form action=\"/login\" method=\"POST\">\n//         <label for=\"username-or-email\">Username or email:</label>\n//         <input type=\"text\" id=\"username-or-email\" name=\"username-or-email\" required/>\n//         <br />\n//         <label for=\"password\">Password:</label>\n//         <input type=\"password\" id=\"password\" name=\"password\" required/>\n//         <br />\n//         <button type=\"submit\"> Log in</button>\n//     </form>\n//   )\n// }\n\n// export default LoginForm\n_s(LoginForm, \"hsokaJHoTnTShQSxT8O4dSN1Pqo=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","LoginForm","emailOrUsername","setEmailOrUsername","password","setPassword","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","ok","json","user","sessionStorage","setItem","window","location","replace","target","value"],"sources":["/home/bombbilly/Development/code/phase-3/project3/recipeapp/frontend/src/components/LoginForm.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction LoginForm() {\n  // Declare a state variable called \"emailOrUsername\" and a function to update it\n  const [emailOrUsername, setEmailOrUsername] = useState('');\n  // Declare a state variable called \"password\" and a function to update it\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Make a POST request to the '/login' endpoint with the email/username and password\n    fetch('localhost:9292/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ emailOrUsername, password }),\n    }).then((response) => {\n      // If the response is successful, save the user's information in the session and redirect to the dashboard\n      if (response.ok) {\n        response.json().then((user) => {\n          sessionStorage.setItem('user', JSON.stringify(user));\n          window.location.replace('/dashboard');\n        });\n      }\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"emailOrUsername\">\n        Email or username:\n        <input\n          type=\"text\"\n          id=\"emailOrUsername\"\n          value={emailOrUsername}\n          onChange={(event) => setEmailOrUsername(event.target.value)}\n        />\n      </label>\n      <br />\n      <label htmlFor=\"password\">\n        Password:\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n      </label>\n      <br />\n      <button type=\"submit\">Log in</button>\n    </form>\n  );\n}\n\n\n\n\n\n\n// import React from 'react'\n\n// function LoginForm() {\n//   return (\n//     <form action=\"/login\" method=\"POST\">\n//         <label for=\"username-or-email\">Username or email:</label>\n//         <input type=\"text\" id=\"username-or-email\" name=\"username-or-email\" required/>\n//         <br />\n//         <label for=\"password\">Password:</label>\n//         <input type=\"password\" id=\"password\" name=\"password\" required/>\n//         <br />\n//         <button type=\"submit\"> Log in</button>\n//     </form>\n//   )\n// }\n\n// export default LoginForm"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,SAAS,GAAG;EAAA;EACnB;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC1D;EACA,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMM,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtB;IACAC,KAAK,CAAC,sBAAsB,EAAE;MAC5BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,eAAe;QAAEE;MAAS,CAAC;IACpD,CAAC,CAAC,CAACW,IAAI,CAAEC,QAAQ,IAAK;MACpB;MACA,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACfD,QAAQ,CAACE,IAAI,EAAE,CAACH,IAAI,CAAEI,IAAI,IAAK;UAC7BC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAER,IAAI,CAACC,SAAS,CAACK,IAAI,CAAC,CAAC;UACpDG,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,YAAY,CAAC;QACvC,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAM,QAAQ,EAAElB,YAAa;IAAA,wBAC3B;MAAO,OAAO,EAAC,iBAAiB;MAAA,WAAC,oBAE/B;QACE,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,iBAAiB;QACpB,KAAK,EAAEJ,eAAgB;QACvB,QAAQ,EAAGK,KAAK,IAAKJ,kBAAkB,CAACI,KAAK,CAACkB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC5D;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAO,OAAO,EAAC,UAAU;MAAA,WAAC,WAExB;QACE,IAAI,EAAC,UAAU;QACf,EAAE,EAAC,UAAU;QACb,KAAK,EAAEtB,QAAS;QAChB,QAAQ,EAAGG,KAAK,IAAKF,WAAW,CAACE,KAAK,CAACkB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACrD;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEX;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,GA1ESzB,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}