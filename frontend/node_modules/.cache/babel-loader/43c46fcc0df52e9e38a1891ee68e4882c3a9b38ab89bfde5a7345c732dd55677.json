{"ast":null,"code":"var _jsxFileName = \"/home/bombbilly/Development/code/phase-3/project3/recipeapp/frontend/src/components/RegistrationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationForm() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"http://localhost:9292/users\", {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        email,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.ok) {\n        setUsername('');\n        setEmail('');\n        setPassword('');\n        setMessage('User created successfully');\n      } else {\n        setMessage('Error creating user');\n      }\n    }).catch(error => {\n      setMessage('Error creating user');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"username\",\n      children: \"Username:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      value: username,\n      onChange: event => setUsername(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      value: email,\n      onChange: event => setEmail(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      value: password,\n      onChange: event => setPassword(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(RegistrationForm, \"tRYla3vCO/TiaNXVkXSQty2VxO8=\");\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","RegistrationForm","username","setUsername","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","response","ok","setMessage","catch","error","target","value"],"sources":["/home/bombbilly/Development/code/phase-3/project3/recipeapp/frontend/src/components/RegistrationForm.js"],"sourcesContent":["import React, { useState } from 'react'\n\nfunction RegistrationForm() {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        fetch(\"http://localhost:9292/users\", {\n            method: 'POST',\n            body: JSON.stringify({\n              username,\n              email,\n              password\n            }),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n            .then(response => {\n              if (response.ok){\n                setUsername('');\n                setEmail('');\n                setPassword('');\n                setMessage('User created successfully');\n              } else {\n                setMessage('Error creating user');\n              }\n            })\n            .catch(error => {\n              setMessage('Error creating user');\n            });\n        };\n\n\n      return (\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <br />\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n          <br />\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <br />\n          <button type=\"submit\">Sign Up</button>\n        </form>\n      );\n    }\n\nexport default RegistrationForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAEvC,SAASC,gBAAgB,GAAG;EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,EAAE;IACtBC,KAAK,CAAC,6BAA6B,EAAE;MACjCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBb,QAAQ;QACRE,KAAK;QACLE;MACF,CAAC,CAAC;MACFU,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,EAAE,EAAC;QACdhB,WAAW,CAAC,EAAE,CAAC;QACfE,QAAQ,CAAC,EAAE,CAAC;QACZE,WAAW,CAAC,EAAE,CAAC;QACfa,UAAU,CAAC,2BAA2B,CAAC;MACzC,CAAC,MAAM;QACLA,UAAU,CAAC,qBAAqB,CAAC;MACnC;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdF,UAAU,CAAC,qBAAqB,CAAC;IACnC,CAAC,CAAC;EACN,CAAC;EAGH,oBACE;IAAM,QAAQ,EAAEZ,YAAa;IAAA,wBAC3B;MAAO,OAAO,EAAC,UAAU;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC3C;MACE,IAAI,EAAC,MAAM;MACX,EAAE,EAAC,UAAU;MACb,KAAK,EAAEN,QAAS;MAChB,QAAQ,EAAGO,KAAK,IAAKN,WAAW,CAACM,KAAK,CAACc,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACrD,eACF;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAO,OAAO,EAAC,OAAO;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAQ,eACrC;MACE,IAAI,EAAC,OAAO;MACZ,EAAE,EAAC,OAAO;MACV,KAAK,EAAEpB,KAAM;MACb,QAAQ,EAAGK,KAAK,IAAKJ,QAAQ,CAACI,KAAK,CAACc,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAClD,eACF;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAO,OAAO,EAAC,UAAU;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC3C;MACE,IAAI,EAAC,UAAU;MACf,EAAE,EAAC,UAAU;MACb,KAAK,EAAElB,QAAS;MAChB,QAAQ,EAAGG,KAAK,IAAKF,WAAW,CAACE,KAAK,CAACc,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACrD,eACF;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACjC;AAEX;AAAC,GA/DIvB,gBAAgB;AAAA,KAAhBA,gBAAgB;AAiEzB,eAAeA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}